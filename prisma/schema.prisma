// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    output   = "./client/prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String  @id @default(uuid())
    nome_completo String
    matricula     BigInt  @unique
    email         String  @unique
    senha         String
    status        Boolean @default(true)
    token Refresh_token?
    cargoId String
    cargo   Cargo  @relation(fields: [cargoId], references: [id], onDelete: Restrict, onUpdate: Cascade)
    user_SistemaId    String?
    User_Sistema      User_Sistema[]
    nivel_de_acessoId String
    nivel_de_acesso   Nivel_de_acesso @relation(fields: [nivel_de_acessoId], references: [id])
    criado_em     DateTime @default(now())
    atualizado_em DateTime @updatedAt
}

model Cargo {
    id        String @id @default(uuid())
    descricao String
    userId String
    User   User[]
    criado_em     DateTime @default(now())
    atualizado_em DateTime @updatedAt
    @@map("cargos")
}

model Nivel_de_acesso {

    id        String @id @default(uuid())
    descricao String
    userId    String @unique
    user      User[]
    @@map("nivel_de_acessos")
}

model Sistema {
    id        String @id @default(uuid())
    descricao String @unique
    user_SistemaId String?
    User_Sistema   User_Sistema[]
    criado_em     DateTime @default(now())
    atualizado_em DateTime @updatedAt
    @@map("sistemas")
}

model User_Sistema {
    id      String  @id @default(uuid())
    user    User    @relation(fields: [userId], references: [id])
    sistema Sistema @relation(fields: [sistemaId], references: [id])
    sistemaId String @unique
    userId    String @unique
    criado_em     DateTime @default(now())
    atualizado_em DateTime @updatedAt
    @@map("user_sistema")
}

model Refresh_token {
    id           String @id @default(uuid())
    userId       String @unique
    user         User   @relation(fields: [userId], references: [id])
    expires_date Int
    atualizado_em DateTime @updatedAt
    @@map("refresh_tokens")
}
